{
    "collab_server" : "",
    "contents" : "setAPIKey <- function(){\n  input = readline(prompt=\"Enter your FlightStats API Key: \")\n  Sys.setenv(flightstats_api_key = input) # this is a more simple way of storing API keys, it saves it in the .Rprofile file, however this is only temporary - meaning next session the login details will have to be provided again. See below how to store login details in a more durable way.\n}\nsetAppId <- function(){\n  input = readline(prompt=\"Enter your FlightStats appID: \")\n  Sys.setenv(flightstats_app_id = input)\n}\n\n#' Function list airlines by IATA code\n#'\n#' @param activeOnly logical value\n#' @return data.frame() with the airline\n#'\n#' @author yuan qingye, \\email{qingye.yuan@gmail.com}\n#'\n#' @examples\n#' listAirlines()\n#'\n#' @import RCurl\n#' @import jsonlite\n#' @export\n#'\nlistAirlines <- function(activeOnly=TRUE){\n  ID = Sys.getenv(\"flightstats_app_id\") \n  if (ID == \"\"){\n    stop(\"Please set your FlightStats AppID and API Key with the setAPIKey() and setAppId() function. You can obtain these from https://developer.flightstats.com.\")\n  }\n  KEY = Sys.getenv(\"flightstats_api_key\")\n  if (ID == \"\"){\n    stop(\"Please set your FlightStats AppID and API Key with the setAPIKey() and setAppId() function. You can obtain these from https://developer.flightstats.com.\")\n  }  \n  if(missing(activeOnly)){\n    choice = \"active\"\n  }\n  if(activeOnly == FALSE) {\n    choice = \"all\"\n  } \n  else {\n    choice = \"active\"\n  }\n  link = paste0(\"https://api.flightstats.com/flex/airlines/rest/v1/json/\",choice,\"?appId=\",ID,\"&appKey=\",KEY)\n  dat = getURL(link)\n  dat_list <- fromJSON(dat)\n  airlines <- dat_list$airlines\n  return(airlines)\n}\n\n#' Function searches a specific airline by IATA code\n#'\n#' @param value character, an airline IATA code\n#' @return data.frame() with the airline\n#'\n#' @author yuan qingye, \\email{qingye.yuan@gmail.com}\n#'\n#' @examples\n#' searchAirline(\"FR\")\n#'\n#' @import RCurl\n#' @import jsonlite\n#' @export\n#'\nsearchAirline <-\n  function(value){\n    ID = Sys.getenv(\"flightstats_app_id\")\n    if (ID == \"\"){\n      stop(\"Please set your FlightStats AppID and API Key with the setAPIKey() and setAppId() function. You can obtain these from https://developer.flightstats.com.\")\n    }\n    KEY = Sys.getenv(\"flightstats_api_key\")\n    if (ID == \"\"){\n      stop(\"Please set your FlightStats AppID and API Key with the setAPIKey() and setAppId() function. You can obtain these from https://developer.flightstats.com.\")\n    }\n    link = paste0(\"https://api.flightstats.com/flex/airlines/rest/v1/json/iata/\",toupper(value),\"?appId=\",ID,\"&appKey=\",KEY)\n    dat <- getURL(link)\n    dat_list <- fromJSON(dat)\n    result <- dat_list$airlines\n    if (length(result)==0){\n      warning(\"Please make sure that you provide a valid airline IATA code.\")\n    }\n    return(result)\n  }\n\n#function need the explanation as I wrote above\npackage.skeleton(name = \"FlightR\", list = c(\"listAirlines\",\"searchAirline\",\"setAPIKey\",\"setAppId\"))\nsetwd(\"~/R_Projects/interestingR/FlightR\")\n\n#remove the file under man and NAMESPACE file\nlibrary(roxygen2)\n# remove files in man\n# add roxygen frame for all function then run\n# if you set wd inside local package folder, no input, if you set other place, you need to specify the\n# path of the folder, if you just outside the local package folder, just type the package/folder name\nroxygenize()\n\nlibrary(devtools)\n#all the process below need inside the local package folder(setwd)\n#write document for the package using roxygenize\ndocument()\n#build the R package and store it in the containing folder of local package folder,which is important\n#for linux system,or you can install directly from local package\nbuild()\n#install the package,can do directly \ninstall()\n\nlibrary(testR)\n\n# can also using github to store the code:\n# Note: These steps assume that you have Git installed and configured on your PC.\n# 1) Create a new repository in your github account.\n# 2) Create and copy the https link to clone the repo on your PC.\n# 3) Go to the folder on your PC where you want to save your repo, open the command line interface & type:\n#   \n# $ git clone https://github.com/YourGithub/YourPackage.git\n# 4) Copy all the files from your package in the folder and run:\n#   \n# $ git add .\n# $ git commit -m \"whatever message you want to add\"\n# $ git push origin master\n# 5) Voila – now your package should be on GitHub!\n#   \n#   Now people can download & install your package straight from GitHub or GitLab – the devtools package has a function for this:\n#   \n#   if (!require(devtools)) {\n#     install.packages('devtools')\n#   }    \n# # If your repo is on GitHub:\n# devtools::install_github('YourGithub/YourPackage')\n",
    "created" : 1547452407682.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "53739726",
    "id" : "F29D24AC",
    "lastKnownWriteTime" : 1547455628,
    "last_content_update" : 1547455628138,
    "path" : "~/R_Projects/interestingR/Rfile/201801/0114_3_step_for_R_package.R",
    "project_path" : "Rfile/201801/0114_3_step_for_R_package.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 14,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}